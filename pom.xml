<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.thaso.example.simple-payroll</groupId>
    <artifactId>simple-payroll</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <properties>
        <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
        <quarkus.platform.group-id>io.quarkus</quarkus.platform.group-id>
        <quarkus.platform.version>2.11.2.Final</quarkus.platform.version>
        <cassandra.quarkus.version>1.1.2</cassandra.quarkus.version>
        <datastax.driver.version>4.14.0</datastax.driver.version>
        <mapstruct.version>1.5.2.Final</mapstruct.version>

        <junit-jupiter.version>5.8.2</junit-jupiter.version>
        <hamcrest-library.version>2.2</hamcrest-library.version>
        <mockito-junit-jupiter.version>4.6.1</mockito-junit-jupiter.version>
        <weld-core.version>2.4.1.Final</weld-core.version>
        <weld-junit5.version>2.0.2.Final</weld-junit5.version>

        <java.version>11</java.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven-failsafe-plugin.version>3.0.0</maven-failsafe-plugin.version>
        <maven-surefire-plugin.version>3.0.0</maven-surefire-plugin.version>
        <maven-dependency-plugin.version>3.4.0</maven-dependency-plugin.version>
        <asciidoctor.maven.plugin.version>1.6.0</asciidoctor.maven.plugin.version>
        <asciidoctorj.version>1.6.2</asciidoctorj.version>
        <asciidoctorj.diagram.version>1.5.18</asciidoctorj.diagram.version>
        <jruby.version>9.2.9.0</jruby.version>

        <generate-excludes></generate-excludes>
    </properties>

    <modules>
        <module>generate</module>
        <module>employee</module>
        <module>worktime</module>
        <!--<module>monthvalue</module>-->
        <!--<module>payroll</module>-->
        <!--<module>careamount</module>-->
        <!--<module>caredata</module>-->
        <!--<module>carereport</module>-->
        <!--<module>transferdata</module>-->
        <!--<module>maintenance</module>-->
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>${quarkus.platform.artifact-id}</artifactId>
                <version>${quarkus.platform.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.datastax.oss.quarkus</groupId>
                <artifactId>cassandra-quarkus-bom</artifactId>
                <version>${cassandra.quarkus.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <version>${hamcrest-library.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito-junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.weld.se</groupId>
            <artifactId>weld-se-core</artifactId>
            <version>${weld-core.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-junit5</artifactId>
            <version>${weld-junit5.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>3.0.0</version>
                    <executions>
                        <execution>
                            <id>add-source-dir</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>${project.build.directory}/generated-sources/src</source>
                                </sources>
                            </configuration>
                        </execution>
                        <execution>
                            <id>add-resource-dir</id>
                            <phase>generate-resources</phase>
                            <goals>
                                <goal>add-resource</goal>
                            </goals>
                            <configuration>
                                <resources>
                                    <resource>
                                        <directory>${project.build.directory}/generated-sources/res</directory>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.3.0</version>
                    <executions>
                        <execution>
                            <id>unpack</id>
                            <phase>initialize</phase>
                            <goals>
                                <goal>unpack</goal>
                            </goals>
                            <configuration>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>de.thaso.example.simple-payroll</groupId>
                                        <artifactId>generate</artifactId>
                                        <version>1.0.0-SNAPSHOT</version>
                                        <classifier>stylesheets</classifier>
                                        <type>zip</type>
                                    </artifactItem>
                                </artifactItems>
                                <overWriteSnapshots>true</overWriteSnapshots>
                                <outputDirectory>${project.build.directory}</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>xml-maven-plugin</artifactId>
                    <version>1.0.2</version>
                    <executions>
                        <execution>
                            <id>generate-entities</id>
                            <phase>generate-sources</phase>
                            <goals>
                                <goal>transform</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <transformationSets>
                            <transformationSet>
                                <dir>src/main/xml</dir>
                                <stylesheet>${project.build.directory}/stylesheet/generate/generate-code.xslt</stylesheet>
                                <parameters>
                                    <parameter>
                                        <name>OutputBaseDirectory</name>
                                        <value>${project.build.directory}/generated-sources/src</value>
                                    </parameter>
                                    <parameter>
                                        <name>KomponentPath</name>
                                        <value>de/thaso/demo/examples/simplepayroll</value>
                                    </parameter>
                                    <parameter>
                                        <name>Exclude</name>
                                        <value>${generate-excludes}</value>
                                    </parameter>
                                </parameters>
                                <outputDir>${project.build.directory}/generated-sources/src</outputDir>
                                <fileMappers>
                                    <fileMapper
                                            implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                                        <pattern>^(.*)\.xml$</pattern>
                                        <replacement>$1.info</replacement>
                                    </fileMapper>
                                </fileMappers>
                            </transformationSet>
                        </transformationSets>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>net.sf.saxon</groupId>
                            <artifactId>saxon</artifactId>
                            <version>8.7</version>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>com.datastax.oss.quarkus</groupId>
                            <artifactId>cassandra-quarkus-mapper-processor</artifactId>
                            <version>${cassandra.quarkus.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>${asciidoctor.maven.plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.jruby</groupId>
                        <artifactId>jruby-complete</artifactId>
                        <version>${jruby.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj</artifactId>
                        <version>${asciidoctorj.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj-diagram</artifactId>
                        <version>${asciidoctorj.diagram.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <sourceDirectory>${project.basedir}/src/main/docs/asciidoc</sourceDirectory>
                    <requires>
                        <require>asciidoctor-diagram</require>
                    </requires>
                    <!--<graphvizdot>/usr/bin/dot</graphvizdot>-->
                    <outputDirectory>${project.build.directory}/generated-docs</outputDirectory>
                    <backend>docbook</backend>
                    <doctype>article</doctype>
                    <attributes>
                        <project-version>${project.version}</project-version>
                    </attributes>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-pdf-doc-custom-theme</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <sourceHighlighter>coderay</sourceHighlighter>
                            <attributes>
                                <icons>font</icons>
                                <pagenums/>
                                <toc/>
                                <idprefix/>
                                <idseparator>-</idseparator>
                            </attributes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>copy-resource-images</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/generated-docs/images</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/docs/assests/images</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.agilejava.docbkx</groupId>
                <artifactId>docbkx-maven-plugin</artifactId>
                <version>2.0.17</version>
                <executions>
                    <execution>
                        <id>draft-output</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>generate-pdf</goal>
                        </goals>
                        <configuration>
                            <!-- per execution configuration -->
                            <draftMode>yes</draftMode>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <!-- shared configuration -->
                    <sourceDirectory>${project.build.directory}/generated-docs</sourceDirectory>
                    <includes>*.xml</includes>
                    <generatedSourceDirectory>${project.build.directory}/docbkx/generated</generatedSourceDirectory>
                    <xincludeSupported>true</xincludeSupported>
                    <highlightSource>1</highlightSource>
                    <paperType>A4</paperType>
                    <fop1Extensions>1</fop1Extensions>
                    <foCustomization>${project.basedir}/src/main/docs/stylesheets/docbook.xsl</foCustomization>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>net.sf.docbook</groupId>
                        <artifactId>docbook-xml</artifactId>
                        <version>5.0-all</version>
                        <classifier>resources</classifier>
                        <type>zip</type>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>${quarkus.platform.group-id}</groupId>
                <artifactId>quarkus-maven-plugin</artifactId>
                <version>${quarkus.platform.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <skip>${skipUnitTests}</skip>
                    <systemPropertyVariables>
                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        <maven.home>${maven.home}</maven.home>
                    </systemPropertyVariables>
                    <excludes>
                        <exclude>**/*DAOTest.java</exclude>
                        <exclude>**/*IT.java</exclude>
                    </excludes>
                    <includes>
                        <include>**/*Test.java</include>
                        <include>**/Test*.java</include>
                        <include>**/*MT.java</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <executions>
                    <execution>
                        <id>failsafe-integration-tests</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>failsafe-verify</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skip>${skipITs}</skip>
                    <excludes>
                        <exclude>**/*MT.java</exclude>
                        <exclude>**/*Test.java</exclude>
                        <exclude>**/Test*.java</exclude>
                    </excludes>
                    <includes>
                        <include>**/*DAOTest.java</include>
                        <include>**/*IT.java</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <id>dependency-tree</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>tree</goal>
                        </goals>
                        <configuration>
                            <outputFile>${project.build.directory}/dependency.txt</outputFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
