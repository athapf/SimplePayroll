version: '3.9'

services:
  zookeeper:
    image: strimzi/kafka:0.19.0-kafka-2.5.0
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    restart: always
    environment:
      LOG_DIR: /tmp/logs
    networks:
      - payroll-network

  kafka:
    image: strimzi/kafka:0.19.0-kafka-2.5.0
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT} --override num.partitions=$${KAFKA_NUM_PARTITIONS} --override group.min.session.timeout.ms=$${KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    restart: always
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS: 100
    networks:
      - payroll-network

  employee:
    image: thaso-example/employee:1.0
    build:
      context: employee
      dockerfile: src/main/docker/Dockerfile.jvm
    depends_on:
      - kafka
    ports:
      - "8081:8080"
    restart: always
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - payroll-network

  worktime:
    image: thaso-example/worktime:1.0
    build:
      context: worktime
      dockerfile: src/main/docker/Dockerfile.jvm
    depends_on:
      - kafka
    ports:
      - "8082:8080"
    restart: always
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - payroll-network

networks:
  payroll-network:
    name: payroll
    external: true
